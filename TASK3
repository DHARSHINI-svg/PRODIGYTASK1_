<--HTML-->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Tic-Tac-Toe Game</title>
    <link rel="stylesheet" href="task3.css" />
  </head>
  <body>
    <div class="container">
      <h1>Tic-Tac-Toe</h1>
      <div id="board" class="board"></div>
      <p id="status">Player X's Turn</p>
      <button onclick="resetGame()">Restart</button>
    </div>

    <script src="task3.js"></script>
  </body>
</html>
<--CSS-->
body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background: linear-gradient(135deg, #00c6ff, #0072ff);
  font-family: Arial, sans-serif;
  margin: 0;
}

.container {
  text-align: center;
  background: rgba(0, 0, 0, 0.4);
  padding: 30px;
  border-radius: 15px;
  color: white;
}

h1 {
  margin-bottom: 20px;
}

.board {
  display: grid;
  grid-template-columns: repeat(3, 100px);
  grid-template-rows: repeat(3, 100px);
  gap: 5px;
  margin-bottom: 20px;
}

.cell {
  width: 100px;
  height: 100px;
  background: white;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 36px;
  cursor: pointer;
  border-radius: 8px;
  transition: background 0.3s;
}

.cell:hover {
  background: #ffce00;
}

button {
  padding: 10px 20px;
  font-size: 16px;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: 0.3s;
}

button:hover {
  background: #ffce00;
  color: black;
}
<--JAVASCRIPT-->
const board = document.getElementById("board");
const statusText = document.getElementById("status");

let currentPlayer = "X";
let gameState = ["", "", "", "", "", "", "", "", ""];
let gameActive = true;

const winningConditions = [
  [0, 1, 2],
  [3, 4, 5],
  [6, 7, 8], // Rows
  [0, 3, 6],
  [1, 4, 7],
  [2, 5, 8], // Columns
  [0, 4, 8],
  [2, 4, 6], // Diagonals
];

// Create board cells
function createBoard() {
  board.innerHTML = "";
  gameState.forEach((cell, index) => {
    const cellDiv = document.createElement("div");
    cellDiv.classList.add("cell");
    cellDiv.dataset.index = index;
    cellDiv.innerText = cell;
    cellDiv.addEventListener("click", cellClick);
    board.appendChild(cellDiv);
  });
}

// Handle cell click
function cellClick(e) {
  const index = e.target.dataset.index;

  if (gameState[index] !== "" || !gameActive) return;

  gameState[index] = currentPlayer;
  e.target.innerText = currentPlayer;

  if (checkWinner()) {
    statusText.innerText = `Player ${currentPlayer} Wins! 🎉`;
    gameActive = false;
    return;
  }

  if (!gameState.includes("")) {
    statusText.innerText = "It's a Draw! 🤝";
    gameActive = false;
    return;
  }

  currentPlayer = currentPlayer === "X" ? "O" : "X";
  statusText.innerText = `Player ${currentPlayer}'s Turn`;
}

// Check winner
function checkWinner() {
  return winningConditions.some((condition) => {
    return condition.every((index) => gameState[index] === currentPlayer);
  });
}

// Reset game
function resetGame() {
  currentPlayer = "X";
  gameState = ["", "", "", "", "", "", "", "", ""];
  gameActive = true;
  statusText.innerText = "Player X's Turn";
  createBoard();
}

// Initialize game
createBoard();

